/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.CuratorsWithThesesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CuratorsWithTheses extends TableImpl<CuratorsWithThesesRecord> {

    private static final long serialVersionUID = -355367506;

    /**
     * The reference instance of <code>public.curators_with_theses</code>
     */
    public static final CuratorsWithTheses CURATORS_WITH_THESES = new CuratorsWithTheses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CuratorsWithThesesRecord> getRecordType() {
        return CuratorsWithThesesRecord.class;
    }

    /**
     * The column <code>public.curators_with_theses.person_id</code>.
     */
    public final TableField<CuratorsWithThesesRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.curators_with_theses.uni_id</code>.
     */
    public final TableField<CuratorsWithThesesRecord, String> UNI_ID = createField("uni_id", org.jooq.impl.SQLDataType.VARCHAR.length(6), this, "");

    /**
     * The column <code>public.curators_with_theses.degree_code</code>.
     */
    public final TableField<CuratorsWithThesesRecord, Short> DEGREE_CODE = createField("degree_code", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.curators_with_theses.firstname</code>.
     */
    public final TableField<CuratorsWithThesesRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>public.curators_with_theses.lastname</code>.
     */
    public final TableField<CuratorsWithThesesRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>public.curators_with_theses.person_state_code</code>.
     */
    public final TableField<CuratorsWithThesesRecord, Short> PERSON_STATE_CODE = createField("person_state_code", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.curators_with_theses.theses</code>.
     */
    public final TableField<CuratorsWithThesesRecord, Object> THESES = createField("theses", org.jooq.impl.SQLDataType.OTHER, this, "");

    /**
     * Create a <code>public.curators_with_theses</code> table reference
     */
    public CuratorsWithTheses() {
        this("curators_with_theses", null);
    }

    /**
     * Create an aliased <code>public.curators_with_theses</code> table reference
     */
    public CuratorsWithTheses(String alias) {
        this(alias, CURATORS_WITH_THESES);
    }

    private CuratorsWithTheses(String alias, Table<CuratorsWithThesesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CuratorsWithTheses(String alias, Table<CuratorsWithThesesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CuratorsWithTheses as(String alias) {
        return new CuratorsWithTheses(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CuratorsWithTheses rename(String name) {
        return new CuratorsWithTheses(name, null);
    }
}
