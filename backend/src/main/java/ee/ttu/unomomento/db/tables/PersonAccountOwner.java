/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.PersonAccountOwnerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonAccountOwner extends TableImpl<PersonAccountOwnerRecord> {

    private static final long serialVersionUID = -810523872;

    /**
     * The reference instance of <code>public.person_account_owner</code>
     */
    public static final PersonAccountOwner PERSON_ACCOUNT_OWNER = new PersonAccountOwner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonAccountOwnerRecord> getRecordType() {
        return PersonAccountOwnerRecord.class;
    }

    /**
     * The column <code>public.person_account_owner.account_id</code>.
     */
    public final TableField<PersonAccountOwnerRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.person_account_owner.person_id</code>.
     */
    public final TableField<PersonAccountOwnerRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.person_account_owner</code> table reference
     */
    public PersonAccountOwner() {
        this("person_account_owner", null);
    }

    /**
     * Create an aliased <code>public.person_account_owner</code> table reference
     */
    public PersonAccountOwner(String alias) {
        this(alias, PERSON_ACCOUNT_OWNER);
    }

    private PersonAccountOwner(String alias, Table<PersonAccountOwnerRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonAccountOwner(String alias, Table<PersonAccountOwnerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonAccountOwnerRecord> getPrimaryKey() {
        return Keys.PK_PERSON_ACCOUNT_OWNER_ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonAccountOwnerRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonAccountOwnerRecord>>asList(Keys.PK_PERSON_ACCOUNT_OWNER_ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonAccountOwnerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonAccountOwnerRecord, ?>>asList(Keys.PERSON_ACCOUNT_OWNER__FK_PERSON_ACCOUNT_OWNER_ACCOUNT_ID, Keys.PERSON_ACCOUNT_OWNER__FK_PERSON_ACCOUNT_OWNER_PERSON_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonAccountOwner as(String alias) {
        return new PersonAccountOwner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonAccountOwner rename(String name) {
        return new PersonAccountOwner(name, null);
    }
}
