/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables.records;


import ee.ttu.unomomento.db.tables.Person;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record6<Long, String, Short, String, String, Short> {

    private static final long serialVersionUID = -546274647;

    /**
     * Setter for <code>public.person.person_id</code>.
     */
    public PersonRecord setPersonId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.person.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.person.uni_id</code>.
     */
    public PersonRecord setUniId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.person.uni_id</code>.
     */
    public String getUniId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.person.degree_code</code>.
     */
    public PersonRecord setDegreeCode(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.person.degree_code</code>.
     */
    public Short getDegreeCode() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.person.firstname</code>.
     */
    public PersonRecord setFirstname(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.person.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.person.lastname</code>.
     */
    public PersonRecord setLastname(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.person.lastname</code>.
     */
    public String getLastname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.person.person_state_code</code>.
     */
    public PersonRecord setPersonStateCode(Short value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.person.person_state_code</code>.
     */
    public Short getPersonStateCode() {
        return (Short) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, Short, String, String, Short> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, Short, String, String, Short> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Person.PERSON.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Person.PERSON.UNI_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Person.PERSON.DEGREE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Person.PERSON.FIRSTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Person.PERSON.LASTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return Person.PERSON.PERSON_STATE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUniId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getDegreeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLastname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getPersonStateCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value1(Long value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value2(String value) {
        setUniId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value3(Short value) {
        setDegreeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value4(String value) {
        setFirstname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value5(String value) {
        setLastname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value6(Short value) {
        setPersonStateCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord values(Long value1, String value2, Short value3, String value4, String value5, Short value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRecord
     */
    public PersonRecord() {
        super(Person.PERSON);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(Long personId, String uniId, Short degreeCode, String firstname, String lastname, Short personStateCode) {
        super(Person.PERSON);

        set(0, personId);
        set(1, uniId);
        set(2, degreeCode);
        set(3, firstname);
        set(4, lastname);
        set(5, personStateCode);
    }
}
