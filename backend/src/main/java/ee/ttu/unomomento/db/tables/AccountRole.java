/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.AccountRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRole extends TableImpl<AccountRoleRecord> {

    private static final long serialVersionUID = -1158989441;

    /**
     * The reference instance of <code>public.account_role</code>
     */
    public static final AccountRole ACCOUNT_ROLE = new AccountRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountRoleRecord> getRecordType() {
        return AccountRoleRecord.class;
    }

    /**
     * The column <code>public.account_role.account_role_code</code>.
     */
    public final TableField<AccountRoleRecord, Short> ACCOUNT_ROLE_CODE = createField("account_role_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.account_role.role_name</code>.
     */
    public final TableField<AccountRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * Create a <code>public.account_role</code> table reference
     */
    public AccountRole() {
        this("account_role", null);
    }

    /**
     * Create an aliased <code>public.account_role</code> table reference
     */
    public AccountRole(String alias) {
        this(alias, ACCOUNT_ROLE);
    }

    private AccountRole(String alias, Table<AccountRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountRole(String alias, Table<AccountRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountRoleRecord> getPrimaryKey() {
        return Keys.PK_ACCOUNT_ROLE_ACCOUNT_ROLE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountRoleRecord>>asList(Keys.PK_ACCOUNT_ROLE_ACCOUNT_ROLE_CODE, Keys.AK_ACCOUNT_ROLE_ROLE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRole as(String alias) {
        return new AccountRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountRole rename(String name) {
        return new AccountRole(name, null);
    }
}
