/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.PersonRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRole extends TableImpl<PersonRoleRecord> {

    private static final long serialVersionUID = -1376423575;

    /**
     * The reference instance of <code>public.person_role</code>
     */
    public static final PersonRole PERSON_ROLE = new PersonRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonRoleRecord> getRecordType() {
        return PersonRoleRecord.class;
    }

    /**
     * The column <code>public.person_role.person_id</code>.
     */
    public final TableField<PersonRoleRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.person_role.role_code</code>.
     */
    public final TableField<PersonRoleRecord, Short> ROLE_CODE = createField("role_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.person_role</code> table reference
     */
    public PersonRole() {
        this("person_role", null);
    }

    /**
     * Create an aliased <code>public.person_role</code> table reference
     */
    public PersonRole(String alias) {
        this(alias, PERSON_ROLE);
    }

    private PersonRole(String alias, Table<PersonRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonRole(String alias, Table<PersonRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonRoleRecord> getPrimaryKey() {
        return Keys.PK_PERSON_ROLE_PERSON_ID_ROLE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonRoleRecord>>asList(Keys.PK_PERSON_ROLE_PERSON_ID_ROLE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonRoleRecord, ?>>asList(Keys.PERSON_ROLE__FK_PERSON_ROLE_PERSON_ID, Keys.PERSON_ROLE__FK_PERSON_ROLE_ROLE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRole as(String alias) {
        return new PersonRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonRole rename(String name) {
        return new PersonRole(name, null);
    }
}
