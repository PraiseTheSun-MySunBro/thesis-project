/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.FacultyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 1 -- School of Business and Governance, 2 -- School of Engineering, 3 -- 
 * School of Information Technologies, 4 -- School of Science, 5 -- Estonian 
 * Maritime Academy
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Faculty extends TableImpl<FacultyRecord> {

    private static final long serialVersionUID = -898209968;

    /**
     * The reference instance of <code>public.faculty</code>
     */
    public static final Faculty FACULTY = new Faculty();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FacultyRecord> getRecordType() {
        return FacultyRecord.class;
    }

    /**
     * The column <code>public.faculty.faculty_code</code>.
     */
    public final TableField<FacultyRecord, Short> FACULTY_CODE = createField("faculty_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.faculty.ee_name</code>.
     */
    public final TableField<FacultyRecord, String> EE_NAME = createField("ee_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>public.faculty.en_name</code>.
     */
    public final TableField<FacultyRecord, String> EN_NAME = createField("en_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * Create a <code>public.faculty</code> table reference
     */
    public Faculty() {
        this("faculty", null);
    }

    /**
     * Create an aliased <code>public.faculty</code> table reference
     */
    public Faculty(String alias) {
        this(alias, FACULTY);
    }

    private Faculty(String alias, Table<FacultyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Faculty(String alias, Table<FacultyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "1 -- School of Business and Governance, 2 -- School of Engineering, 3 -- School of Information Technologies, 4 -- School of Science, 5 -- Estonian Maritime Academy");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FacultyRecord> getPrimaryKey() {
        return Keys.PK_FACULTY_FACULTY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FacultyRecord>> getKeys() {
        return Arrays.<UniqueKey<FacultyRecord>>asList(Keys.PK_FACULTY_FACULTY_CODE, Keys.AK_FACULTY_EE_NAME, Keys.AK_FACULTY_EN_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Faculty as(String alias) {
        return new Faculty(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Faculty rename(String name) {
        return new Faculty(name, null);
    }
}
