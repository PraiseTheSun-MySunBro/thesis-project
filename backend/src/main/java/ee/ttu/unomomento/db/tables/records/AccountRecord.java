/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables.records;


import ee.ttu.unomomento.db.tables.Account;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record7<Long, String, String, String, Short, Short, Timestamp> {

    private static final long serialVersionUID = -663428462;

    /**
     * Setter for <code>public.account.account_id</code>.
     */
    public AccountRecord setAccountId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.account.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.account.username</code>.
     */
    public AccountRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.account.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.account.password</code>.
     */
    public AccountRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.account.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.account.email</code>.
     */
    public AccountRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.account.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.account.account_state_code</code>.
     */
    public AccountRecord setAccountStateCode(Short value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.account.account_state_code</code>.
     */
    public Short getAccountStateCode() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.account.account_role_code</code>.
     */
    public AccountRecord setAccountRoleCode(Short value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.account.account_role_code</code>.
     */
    public Short getAccountRoleCode() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>public.account.reg_time</code>.
     */
    public AccountRecord setRegTime(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.account.reg_time</code>.
     */
    public Timestamp getRegTime() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, Short, Short, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, String, Short, Short, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Account.ACCOUNT.ACCOUNT_STATE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return Account.ACCOUNT.ACCOUNT_ROLE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Account.ACCOUNT.REG_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getAccountStateCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getAccountRoleCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getRegTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value1(Long value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value4(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value5(Short value) {
        setAccountStateCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value6(Short value) {
        setAccountRoleCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord value7(Timestamp value) {
        setRegTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRecord values(Long value1, String value2, String value3, String value4, Short value5, Short value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long accountId, String username, String password, String email, Short accountStateCode, Short accountRoleCode, Timestamp regTime) {
        super(Account.ACCOUNT);

        set(0, accountId);
        set(1, username);
        set(2, password);
        set(3, email);
        set(4, accountStateCode);
        set(5, accountRoleCode);
        set(6, regTime);
    }
}
