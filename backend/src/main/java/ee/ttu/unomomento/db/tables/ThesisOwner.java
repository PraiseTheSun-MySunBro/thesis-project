/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.ThesisOwnerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThesisOwner extends TableImpl<ThesisOwnerRecord> {

    private static final long serialVersionUID = 90010662;

    /**
     * The reference instance of <code>public.thesis_owner</code>
     */
    public static final ThesisOwner THESIS_OWNER = new ThesisOwner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThesisOwnerRecord> getRecordType() {
        return ThesisOwnerRecord.class;
    }

    /**
     * The column <code>public.thesis_owner.thesis_id</code>.
     */
    public final TableField<ThesisOwnerRecord, Long> THESIS_ID = createField("thesis_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.thesis_owner.person_id</code>.
     */
    public final TableField<ThesisOwnerRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.thesis_owner.role_code</code>.
     */
    public final TableField<ThesisOwnerRecord, Short> ROLE_CODE = createField("role_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.thesis_owner</code> table reference
     */
    public ThesisOwner() {
        this("thesis_owner", null);
    }

    /**
     * Create an aliased <code>public.thesis_owner</code> table reference
     */
    public ThesisOwner(String alias) {
        this(alias, THESIS_OWNER);
    }

    private ThesisOwner(String alias, Table<ThesisOwnerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThesisOwner(String alias, Table<ThesisOwnerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThesisOwnerRecord> getPrimaryKey() {
        return Keys.PK_THESIS_OWNER_THESIS_ID_PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThesisOwnerRecord>> getKeys() {
        return Arrays.<UniqueKey<ThesisOwnerRecord>>asList(Keys.PK_THESIS_OWNER_THESIS_ID_PERSON_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ThesisOwnerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ThesisOwnerRecord, ?>>asList(Keys.THESIS_OWNER__FK_THESIS_OWNER_THESIS_ID, Keys.THESIS_OWNER__FK_THESIS_OWNER_PERSON_ID, Keys.THESIS_OWNER__FK_THESIS_OWNER_ROLE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThesisOwner as(String alias) {
        return new ThesisOwner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ThesisOwner rename(String name) {
        return new ThesisOwner(name, null);
    }
}
