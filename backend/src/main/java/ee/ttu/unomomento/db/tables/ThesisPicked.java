/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.ThesisPickedRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThesisPicked extends TableImpl<ThesisPickedRecord> {

    private static final long serialVersionUID = 2120940924;

    /**
     * The reference instance of <code>public.thesis_picked</code>
     */
    public static final ThesisPicked THESIS_PICKED = new ThesisPicked();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThesisPickedRecord> getRecordType() {
        return ThesisPickedRecord.class;
    }

    /**
     * The column <code>public.thesis_picked.thesis_id</code>.
     */
    public final TableField<ThesisPickedRecord, Long> THESIS_ID = createField("thesis_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.thesis_picked.person_id</code>.
     */
    public final TableField<ThesisPickedRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.thesis_picked.degree_code</code>.
     */
    public final TableField<ThesisPickedRecord, Short> DEGREE_CODE = createField("degree_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.thesis_picked</code> table reference
     */
    public ThesisPicked() {
        this("thesis_picked", null);
    }

    /**
     * Create an aliased <code>public.thesis_picked</code> table reference
     */
    public ThesisPicked(String alias) {
        this(alias, THESIS_PICKED);
    }

    private ThesisPicked(String alias, Table<ThesisPickedRecord> aliased) {
        this(alias, aliased, null);
    }

    private ThesisPicked(String alias, Table<ThesisPickedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThesisPickedRecord> getPrimaryKey() {
        return Keys.PK_THESIS_PICKED_THESIS_ID_PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThesisPickedRecord>> getKeys() {
        return Arrays.<UniqueKey<ThesisPickedRecord>>asList(Keys.PK_THESIS_PICKED_THESIS_ID_PERSON_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ThesisPickedRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ThesisPickedRecord, ?>>asList(Keys.THESIS_PICKED__FK_THESIS_PICKED_THESIS_ID, Keys.THESIS_PICKED__FK_THESIS_PICKED_PERSON_ID, Keys.THESIS_PICKED__FK_THESIS_PICKED_DEGREE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThesisPicked as(String alias) {
        return new ThesisPicked(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ThesisPicked rename(String name) {
        return new ThesisPicked(name, null);
    }
}
