/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables.records;


import ee.ttu.unomomento.db.tables.AccountRole;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRoleRecord extends UpdatableRecordImpl<AccountRoleRecord> implements Record2<Short, String> {

    private static final long serialVersionUID = -1685966685;

    /**
     * Setter for <code>public.account_role.account_role_code</code>.
     */
    public AccountRoleRecord setAccountRoleCode(Short value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.account_role.account_role_code</code>.
     */
    public Short getAccountRoleCode() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.account_role.role_name</code>.
     */
    public AccountRoleRecord setRoleName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.account_role.role_name</code>.
     */
    public String getRoleName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Short, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Short, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return AccountRole.ACCOUNT_ROLE.ACCOUNT_ROLE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AccountRole.ACCOUNT_ROLE.ROLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getAccountRoleCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRoleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRoleRecord value1(Short value) {
        setAccountRoleCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRoleRecord value2(String value) {
        setRoleName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRoleRecord values(Short value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRoleRecord
     */
    public AccountRoleRecord() {
        super(AccountRole.ACCOUNT_ROLE);
    }

    /**
     * Create a detached, initialised AccountRoleRecord
     */
    public AccountRoleRecord(Short accountRoleCode, String roleName) {
        super(AccountRole.ACCOUNT_ROLE);

        set(0, accountRoleCode);
        set(1, roleName);
    }
}
