/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables.records;


import ee.ttu.unomomento.db.tables.Faculty;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 1 -- School of Business and Governance, 2 -- School of Engineering, 3 -- 
 * School of Information Technologies, 4 -- School of Science, 5 -- Estonian 
 * Maritime Academy
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FacultyRecord extends UpdatableRecordImpl<FacultyRecord> implements Record3<Short, String, String> {

    private static final long serialVersionUID = 514272760;

    /**
     * Setter for <code>public.faculty.faculty_code</code>.
     */
    public FacultyRecord setFacultyCode(Short value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.faculty.faculty_code</code>.
     */
    public Short getFacultyCode() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.faculty.ee_name</code>.
     */
    public FacultyRecord setEeName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.faculty.ee_name</code>.
     */
    public String getEeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.faculty.en_name</code>.
     */
    public FacultyRecord setEnName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.faculty.en_name</code>.
     */
    public String getEnName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Short, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Short, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return Faculty.FACULTY.FACULTY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Faculty.FACULTY.EE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Faculty.FACULTY.EN_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getFacultyCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getEnName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord value1(Short value) {
        setFacultyCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord value2(String value) {
        setEeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord value3(String value) {
        setEnName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FacultyRecord values(Short value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FacultyRecord
     */
    public FacultyRecord() {
        super(Faculty.FACULTY);
    }

    /**
     * Create a detached, initialised FacultyRecord
     */
    public FacultyRecord(Short facultyCode, String eeName, String enName) {
        super(Faculty.FACULTY);

        set(0, facultyCode);
        set(1, eeName);
        set(2, enName);
    }
}
