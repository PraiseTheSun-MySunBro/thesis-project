/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables;


import ee.ttu.unomomento.db.Keys;
import ee.ttu.unomomento.db.Public;
import ee.ttu.unomomento.db.tables.records.ThesisRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Thesis extends TableImpl<ThesisRecord> {

    private static final long serialVersionUID = -1708033526;

    /**
     * The reference instance of <code>public.thesis</code>
     */
    public static final Thesis THESIS = new Thesis();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ThesisRecord> getRecordType() {
        return ThesisRecord.class;
    }

    /**
     * The column <code>public.thesis.thesis_id</code>.
     */
    public final TableField<ThesisRecord, Long> THESIS_ID = createField("thesis_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('thesis_thesis_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.thesis.supervisor_name</code>.
     */
    public final TableField<ThesisRecord, String> SUPERVISOR_NAME = createField("supervisor_name", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>public.thesis.faculty_code</code>.
     */
    public final TableField<ThesisRecord, Short> FACULTY_CODE = createField("faculty_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.thesis.thesis_state_code</code>.
     */
    public final TableField<ThesisRecord, Short> THESIS_STATE_CODE = createField("thesis_state_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.thesis.degree_code</code>.
     */
    public final TableField<ThesisRecord, Short> DEGREE_CODE = createField("degree_code", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.thesis.ee_title</code>.
     */
    public final TableField<ThesisRecord, String> EE_TITLE = createField("ee_title", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>public.thesis.en_title</code>.
     */
    public final TableField<ThesisRecord, String> EN_TITLE = createField("en_title", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>public.thesis.ee_description</code>.
     */
    public final TableField<ThesisRecord, String> EE_DESCRIPTION = createField("ee_description", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>public.thesis.en_description</code>.
     */
    public final TableField<ThesisRecord, String> EN_DESCRIPTION = createField("en_description", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * Create a <code>public.thesis</code> table reference
     */
    public Thesis() {
        this("thesis", null);
    }

    /**
     * Create an aliased <code>public.thesis</code> table reference
     */
    public Thesis(String alias) {
        this(alias, THESIS);
    }

    private Thesis(String alias, Table<ThesisRecord> aliased) {
        this(alias, aliased, null);
    }

    private Thesis(String alias, Table<ThesisRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ThesisRecord, Long> getIdentity() {
        return Keys.IDENTITY_THESIS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ThesisRecord> getPrimaryKey() {
        return Keys.PK_THESIS_THESIS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ThesisRecord>> getKeys() {
        return Arrays.<UniqueKey<ThesisRecord>>asList(Keys.PK_THESIS_THESIS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ThesisRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ThesisRecord, ?>>asList(Keys.THESIS__FK_THESIS_FACULTY_CODE, Keys.THESIS__FK_THESIS_THESIS_STATE_CODE, Keys.THESIS__FK_THESIS_DEGREE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Thesis as(String alias) {
        return new Thesis(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Thesis rename(String name) {
        return new Thesis(name, null);
    }
}
