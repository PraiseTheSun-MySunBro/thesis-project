/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables.records;


import ee.ttu.unomomento.db.tables.PersonRole;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRoleRecord extends UpdatableRecordImpl<PersonRoleRecord> implements Record2<Long, Short> {

    private static final long serialVersionUID = -43020520;

    /**
     * Setter for <code>public.person_role.person_id</code>.
     */
    public PersonRoleRecord setPersonId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.person_role.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.person_role.role_code</code>.
     */
    public PersonRoleRecord setRoleCode(Short value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.person_role.role_code</code>.
     */
    public Short getRoleCode() {
        return (Short) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Short> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Short> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Short> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PersonRole.PERSON_ROLE.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return PersonRole.PERSON_ROLE.ROLE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getRoleCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRoleRecord value1(Long value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRoleRecord value2(Short value) {
        setRoleCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRoleRecord values(Long value1, Short value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRoleRecord
     */
    public PersonRoleRecord() {
        super(PersonRole.PERSON_ROLE);
    }

    /**
     * Create a detached, initialised PersonRoleRecord
     */
    public PersonRoleRecord(Long personId, Short roleCode) {
        super(PersonRole.PERSON_ROLE);

        set(0, personId);
        set(1, roleCode);
    }
}
