/*
 * This file is generated by jOOQ.
*/
package ee.ttu.unomomento.db.tables.records;


import ee.ttu.unomomento.db.tables.ThesisCandidate;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ThesisCandidateRecord extends UpdatableRecordImpl<ThesisCandidateRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -1912590162;

    /**
     * Setter for <code>public.thesis_candidate.thesis_id</code>.
     */
    public ThesisCandidateRecord setThesisId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.thesis_candidate.thesis_id</code>.
     */
    public Long getThesisId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.thesis_candidate.candidate_id</code>.
     */
    public ThesisCandidateRecord setCandidateId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.thesis_candidate.candidate_id</code>.
     */
    public Long getCandidateId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ThesisCandidate.THESIS_CANDIDATE.THESIS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ThesisCandidate.THESIS_CANDIDATE.CANDIDATE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getThesisId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getCandidateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThesisCandidateRecord value1(Long value) {
        setThesisId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThesisCandidateRecord value2(Long value) {
        setCandidateId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ThesisCandidateRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ThesisCandidateRecord
     */
    public ThesisCandidateRecord() {
        super(ThesisCandidate.THESIS_CANDIDATE);
    }

    /**
     * Create a detached, initialised ThesisCandidateRecord
     */
    public ThesisCandidateRecord(Long thesisId, Long candidateId) {
        super(ThesisCandidate.THESIS_CANDIDATE);

        set(0, thesisId);
        set(1, candidateId);
    }
}
